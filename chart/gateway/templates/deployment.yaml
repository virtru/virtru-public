apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "gateway.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "gateway.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "gateway.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: cert-generator
          image: alpine:latest
          # todo move this into a bash script? or remove apk add bash from the below line
          command: ['sh', '-c', "apk update && apk upgrade && apk add bash openssl && openssl genrsa -out /etc/postfix/tls/{{ .Values.gatewayHostname }}/client.key 2048 && openssl req -new -key /etc/postfix/tls/{{ .Values.gatewayHostname }}/client.key -x509 -subj /CN={{ .Values.gatewayHostname }} -days 3650 -out /etc/postfix/tls/{{ .Values.gatewayHostname }}/client.pem"]
          volumeMounts:
          - name: cert-dir
            mountPath: /etc/postfix/tls/{{ .Values.gatewayHostname }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - name: cert-dir
            mountPath: /etc/postfix/tls/{{ .Values.gatewayHostname }}
          ports:
            - containerPort: {{ .Values.service.port }}
              protocol: TCP
          envFrom:
          - configMapRef:
              name: gateway
          env:
          - name: GATEWAY_AMPLITUDE_API_KEY
            valueFrom:
              secretKeyRef:
                key: gateway-amplitude-api-key
                name: {{ .Release.Name }}-secrets
          - name: GATEWAY_API_TOKEN_SECRET
            valueFrom:
              secretKeyRef:
                key: gateway-api-token-secret
                name: {{ .Release.Name }}-secrets
          - name: GATEWAY_API_TOKEN_NAME
            valueFrom:
              secretKeyRef:
                key: gateway-api-token-name
                name: {{ .Release.Name }}-secrets
          readinessProbe:
            tcpSocket:
              port: 25
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 3
            timeoutSeconds: 1
          livenessProbe:
            tcpSocket:
              port: 25
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 2
            timeoutSeconds: 60
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: ubbagent
          image: gcr.io/cloud-marketplace-tools/metering/ubbagent:latest
          env:
            - name: AGENT_CONFIG_FILE
              value: "/etc/ubbagent/config.yaml"
            - name: AGENT_LOCAL_PORT
              value: "4567"
            - name: AGENT_ENCODED_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reportingSecret }}
                  key: reporting-key
            - name: AGENT_CONSUMER_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reportingSecret }}
                  key: consumer-id
            - name: ENTITLEMENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.reportingSecret }}
                  key: entitlement-id
          volumeMounts:
            - name: ubbagent-config
              mountPath: /etc/ubbagent
        - name: billing-helper-{{ .Chart.Name }}
          image: alpine:latest
          # This container runs a curl command on infinite loop. The curl posts usage data to ubbagent.
          # see https://github.com/GoogleCloudPlatform/marketplace-k8s-app-tools/blob/master/docs/billing-integration.md#sending-usage-reports
          command:
          - "/bin/sh"
          - "-c"
          - |
            apk add curl
            echo "Starting billing helper" >&2
            while true
            do
              postbody="{\"name\":\"user\", \"startTime\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",\"endTime\": \"$(date -u +%Y-%m-%dT%H:%M:%SZ)\",\"value\": { \"int64Value\": {{ .Values.user }} } }"
              echo "${postbody}" >&2
              curl -X POST -d "${postbody}" "http://localhost:4567/report"
              sleep 120
            done
      volumes:
      - name: cert-dir
        emptyDir: {}
      - name: ubbagent-config
        configMap:
          name: ubbagent-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
